"""
k друзей организовали стартап по производству укулеле для кошек. На сегодняшний день прибыль составила n рублей.
Вы, как главный бухгалтер компании, хотите в каждый из ближайших d дней приписывать по одной цифре в конец числа,
выражающего прибыль. При этом в каждый из дней прибыль должна делиться на k.

Формат ввода
В единственной строке входных данных через пробел записаны три числа: n, k, d — изначальная прибыль, количество
учредителей компании и количество дней, которое вы собираетесь следить за прибылью(1≤n,k≤10**9, 1≤d≤10**5).
НЕ гарантируется, что n делится на k.

Формат вывода
Выведите одно целое число x — прибыль компании через d дней. Первые цифры числа x должны совпадать с числом n.
Все префиксы числа x, которые длиннее числа n на 1, 2, …, d цифр, должны делиться на k. Если возможных ответов
несколько, выведите любой из них. Если ответа не существует, выведите −1.

Пример 1
21 108 1

216

Пример 2
5 12 4

-1
"""

print('---------answer----------')

n, k, d = input().split()

k = int(k)
d = int(d)

for day in range(d):
    if n[-5:] == '00000':
        n += '0' * (d - day)
        break

    if int(n + '0') % k == 0:
        n += '0'
        continue
    if int(n + '1') % k == 0:
        n += '1'
        continue
    if int(n + '2') % k == 0:
        n += '2'
        continue
    if int(n + '3') % k == 0:
        n += '3'
        continue
    if int(n + '4') % k == 0:
        n += '4'
        continue
    if int(n + '5') % k == 0:
        n += '5'
        continue
    if int(n + '6') % k == 0:
        n += '6'
        continue
    if int(n + '7') % k == 0:
        n += '7'
        continue
    if int(n + '8') % k == 0:
        n += '8'
        continue
    if int(n + '9') % k == 0:
        n += '9'
        continue
    else:
        n = -1
        break

print(n)

print('---------yandex----------')

n, k, d = input().split()
n = int(n)
k = int(k)
d = int(d)
nowmod = n % k
ans = [n]
flag = True
for i in range(d):
    for newdigit in range(10):
        newmod = (nowmod * 10 + newdigit) % k
        if newmod == 0:
            ans.append(newdigit)
            nowmod = newmod
            break
    else:
        flag = True
if flag:
    print(''.join(map(str, ans)))
else:
    print(-1)
